from processpiper import ProcessMap, EventType, ActivityType, GatewayType
from processpiper.text2diagram import render

from Structure.Activity import Activity
from Structure.Structure import LinkedStructure, Structure


def create_bpmn_model(input_syntax: str):
    input_syntax = """
    title: Sample Test Process
    colourtheme: GREENTURTLE
        lane: End User
            (start) as start
            [Enter Keyword] as enter_keyword
            (end) as end
        pool: System Search
            lane: Database System
                [Login] as login
                [Search Records] as search_records
                <Result Found?> as result_found
                [Display Result] as display_result
                [Logout] as logout
            lane: Log System
                [Log Error] as log_error

        start->login->enter_keyword->search_records->result_found
        result_found-"found result"->log_error->display_result
        result_found->display_result->logout->end

        footer: Generated by ProcessPiper
    """

    # input_syntax = """
    # title: Text02
    # colourtheme: BLUEMOUNTAIN
    # lane: customer
    #     (start) as start
    #     [bring a defective computer] as activity_1
    #     <decides the costs are acceptable?> as gateway_1
    #     [the process continues] as activity_4
    #     [take her computer home] as activity_5
    #     [the ongoing repair consists of two activities] as activity_6
    #     [execute two activities in an arbitrary order] as activity_7
    #     [the first activity check the hardware] as activity_8
    #     [the first activity repair the hardware] as activity_9
    #     [the second activity checks the software] as activity_10
    #     [the second activity configure the software] as activity_11
    #     [test the proper system functionality after each of these activities] as activity_12
    #     <detect an error?> as gateway_2
    #     [execute another arbitrary repair activity] as activity_13
    #     [finish the repair] as activity_14
    #     (end) as end
    # lane: crs
    #     [check the defect] as activity_2
    #     [hand out a repair cost calculation] as activity_3
    #
    # start->activity_1->activity_2->activity_3->gateway_1
    # gateway_1->activity_4->activity_6
    # gateway_1->activity_5->activity_6
    # activity_6->activity_7->activity_8->activity_9->activity_10->activity_11->activity_12->gateway_2
    # gateway_2->activity_13->end
    # gateway_2->activity_14->end
    # """

    render(input_syntax, "/Users/shuaiwei_yu/Downloads/my_process_map1.png")


def create_bpmn_description(activity_list: [Structure], actor_list:list, title: str, theme: str = "BLUEMOUNTAIN"):
    result = ""
    result += "title: " + title + "\n"
    result += "colourtheme: " + theme + "\n"

    lanes = {}
    for actor in actor_list:
        lanes[actor] = []

    for activity in activity_list:
        if activity_list.index(activity) == 0:
            a = activity.process.actor.full_name

